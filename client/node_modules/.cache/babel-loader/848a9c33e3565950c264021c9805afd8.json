{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\charl\\\\documents\\\\completereactdeveloper2021\\\\liquid-clothing\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport FormInput from '../form-input/form-input.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.styles';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(SignInContainer, {\n      children: [/*#__PURE__*/_jsxDEV(SignInTitle, {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"email\",\n          value: this.state.email,\n          name: \"email\",\n          label: \"email\",\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          type: \"password\",\n          value: this.state.password,\n          name: \"password\",\n          label: \"password\",\n          handleChange: this.handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonsBarContainer, {\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"SIGN IN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: [' ', \"SIGN IN WITH GOOGLE\", ' ']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/charl/documents/completereactdeveloper2021/liquid-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","CustomButton","FormInput","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","email","password","state","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport FormInput from '../form-input/form-input.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\r\n\r\nimport {\r\n  SignInContainer,\r\n  SignInTitle,\r\n  ButtonsBarContainer\r\n} from './sign-in.styles';\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state= {\r\n      email: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { emailSignInStart } = this.props;\r\n    const { email, password } = this.state;\r\n\r\n\r\n    emailSignInStart(email, password);\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { value, name } = e.target\r\n\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  render() {\r\n    const { googleSignInStart } = this.props;\r\n    return(\r\n      <SignInContainer>\r\n        <SignInTitle>I already have an account</SignInTitle>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            name=\"email\"\r\n            label=\"email\"\r\n            handleChange={this.handleChange}\r\n            required\r\n          />\r\n          <FormInput\r\n            type=\"password\"\r\n            value={this.state.password}\r\n            name=\"password\"\r\n            label=\"password\"\r\n            handleChange={this.handleChange}\r\n            required\r\n          />\r\n          <ButtonsBarContainer>\r\n            <CustomButton type=\"submit\">SIGN IN</CustomButton>\r\n            <CustomButton\r\n              type=\"button\"\r\n              onClick={googleSignInStart}\r\n              isGoogleSignIn\r\n            >\r\n              {' '}\r\n              SIGN IN WITH GOOGLE{' '}\r\n            </CustomButton>\r\n          </ButtonsBarContainer>\r\n        </form>\r\n      </SignInContainer>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}