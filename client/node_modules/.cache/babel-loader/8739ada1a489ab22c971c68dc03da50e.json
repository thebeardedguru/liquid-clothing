{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\charl\\\\documents\\\\completereactdeveloper2021\\\\liquid-clothing\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOverviewWithSpinner;\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionsPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    fetch('https://firestore.googleapis.com/v1/projects/liquid-clothing-db/databases/(default)/documents/collections').then(res => res.json()).then(collections => console.log(collections)); // collectionRef.get().then(snapshot => {\n    //   console.log('snapshot', snapshot)\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n    //   updateCollections(collectionsMap);\n    //   this.setState({ loading: false });\n    // });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionsPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionsPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/charl/documents/completereactdeveloper2021/liquid-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","convertCollectionsSnapshotToMap","firestore","updateCollections","WithSpinner","CollectionsOverview","CollectionPage","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","fetch","then","res","json","collections","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AAEA,SAASC,iBAAT,QAAmC,+BAAnC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;KAAME,8B;AACN,MAAMC,0BAA0B,GAAGJ,WAAW,CAACE,cAAD,CAA9C;MAAME,0B;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC;AACA,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AAEAC,IAAAA,KAAK,CAAC,2GAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,WAAW,IAAIC,OAAO,CAACC,GAAR,CAAYF,WAAZ,CAFrB,EAJkB,CAOlB;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKX,KAAvB;AACA,UAAM;AAAEH,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,EAFtB;AAGE,QAAA,MAAM,EACHZ,KAAD,iBACE,QAAC,8BAAD;AACE,UAAA,SAAS,EAAEH,OADb;AAAA,aAEMG;AAFN;AAAA;AAAA;AAAA;AAAA;AALN;AAAA;AAAA;AAAA;AAAA,cADF,eAYE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,gBADtB;AAEE,QAAA,MAAM,EACHZ,KAAD,iBACE,QAAC,0BAAD;AACE,UAAA,SAAS,EAAEH,OADb;AAAA,aAEMG;AAFN;AAAA;AAAA;AAAA;AAAA;AAJN;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyBD;;AAlDoC;;AAmDtC;;AAED,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACtC1B,EAAAA,iBAAiB,EAAE2B,cAAc,IAAID,QAAQ,CAAC1B,iBAAiB,CAAC2B,cAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAe9B,OAAO,CAAC,IAAD,EAAO4B,kBAAP,CAAP,CAAkCnB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\r\n\r\nimport { updateCollections  } from '../../redux/shop/shop.actions'\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection('collections');\r\n\r\n    fetch('https://firestore.googleapis.com/v1/projects/liquid-clothing-db/databases/(default)/documents/collections')\r\n    .then(res => res.json())\r\n    .then(collections => console.log(collections))\r\n    // collectionRef.get().then(snapshot => {\r\n    //   console.log('snapshot', snapshot)\r\n    //   const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n    //   updateCollections(collectionsMap);\r\n    //   this.setState({ loading: false });\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    const { match } = this.props;\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className='shop-page'>\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={\r\n            (props) =>\r\n              <CollectionsOverviewWithSpinner\r\n                isLoading={loading}\r\n                {...props}\r\n              />\r\n          }\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={\r\n            (props) =>\r\n              <CollectionsPageWithSpinner\r\n                isLoading={loading}\r\n                {...props}\r\n              />\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}